# -*- coding: utf-8 -*-
"""linreg_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/nwidyant9/Project00/blob/main/linreg_model.ipynb
"""

import os
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import pickle
import joblib

data_path = 'https://raw.githubusercontent.com/nwidyant9/G-Dash/main/dummy.csv'

dset = pd.read_csv(data_path)

dset.head(15)

dset.info()

dset = dset.drop(['Bulan', 'Code'], axis=1)

dset.head(15)

dset['BD_percent'] = dset['Menit'] / dset['Load_time']

dset.head(15)

dset = dset.dropna()

dset.head(15)

dset.info()

dset['Mesin'].value_counts()

dset = dset.drop(['Mesin', 'Target'], axis=1)

dset.head(15)

#scaler = MinMaxScaler()
#norm_dset = scaler.fit_transform(dset)

#norm_dset = pd.DataFrame(norm_dset, columns=dset.columns)

#norm_dset.head(15)

x = dset[['Load_time', 'Freq', 'Menit']]
y = dset['BD_percent']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=11)

"""MODEL 1"""

model = LinearRegression()

model.fit(x_train, y_train)

y_pred = model.predict(x_test)

print(x_test)

print(y_test)

print("Prediction values:", y_pred)

plt.plot(range(len(y_pred)), y_pred, label='Predicted')
plt.plot(range(len(y_test)), y_test, label='Actual')
plt.xlabel('Index')
plt.ylabel('Value')
plt.title('Predicted vs Actual')
plt.legend()
plt.show()

mse = mean_squared_error(y_test, y_pred)
print("MSE:", mse)

rmse = mean_squared_error(y_test, y_pred, squared=False)
print("RMSE:", rmse)

r2 = r2_score(y_test, y_pred)
print("R-squared:", r2)

# Menyimpan model ke dalam file pickle
with open('regression_model.pkl', 'wb') as model_file:
    pickle.dump(model, model_file)
